<?php

namespace App\Models;

use Laravel\Sanctum\HasApiTokens;
use App\Notifications\ActivateAccount;
use Illuminate\Notifications\Notifiable;
use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;

class User extends Authenticatable implements MustVerifyEmail
{
    use HasApiTokens, HasFactory, Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'firstname',
        'lastname',
        'username',
        'email',
        'password',
        'phone',
        'gender',
        'school',
        'level',
        'department',
        'speciality',
        'address',
    ];

    /**
     * The attributes that should be hidden for serialization.
     *
     * @var array<int, string>
     */
    protected $hidden = [
        'password',
        'remember_token',
    ];

    /**
     * The attributes that should be cast.
     *
     * @var array<string, string>
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
        'account_activated_at' => 'datetime',
        'activated_at' => 'datetime',
    ];

    /**
     * Determine if the user has activated their account.
     *
     * @return bool
     */
    public function hasActivatedAccount()
    {
        return !is_null($this->account_activated_at);
    }

    /**
     * Mark the given user's account as activated.
     *
     * @return bool
     */
    public function markAccountAsActivated()
    {
        return $this->forceFill([
            'account_activated_at' => $this->freshTimestamp(),
        ])->save();
    }

    /**
     * Send the account activation notification.
     *
     * @return void
     */
    public function sendAccountActivationNotification()
    {
        $this->notify(new ActivateAccount());
    }
}
